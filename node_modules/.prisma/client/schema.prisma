// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id      Int      @default(autoincrement()) @id
  email String @unique 
  password  String 
  
  name    String?

  accts Account[]
  categories Category[]
}

model Account {
  id Int @default(autoincrement()) @id
  balance Int @default(0)
  name String 
  type AcctType
  user User @relation(fields: [userId], references: [id])
  userId Int
  transactions Transaction[] @relation(name: "TransMainAcct")
  transactionsSub Transaction[] @relation(name: "TransSubAcct")//??
  version Int @default(0)

  @@unique([name,userId], name: "acctIdx")
}

model Transaction {
  id Int @default(autoincrement()) @id
  accout Account @relation(name: "TransMainAcct",fields: [accountId], references: [id])
  accountId Int
  type TransType
  createdAt DateTime @default(now())
  amount Int
  category Int
  
  acctSub Account? @relation(name: "TransSubAcct", fields: [accountSubId], references: [id])  //I dont wanna use this maybe I don't need this
  accountSubId Int?

}

model Category{
  //id String @default("") @id  //should be combination of userId and categoryNum 
  //https://stackoverflow.com/questions/53373101/prisma-datamodel-primary-key-as-a-combination-of-two-relational-models
  user User @relation(fields: [userId], references:[id])
  userId Int

  categoryNum Int
  name String
  balance Int

  @@id([userId, categoryNum])

}

enum AcctType { 
  CHECKING  @map("CHECKING")
  SAVING @map("SAVING")
}

enum TransType {
  SEND @map("SEND")
  RECEIVE @map("RECEIVE")
  EXPENDITURE @map("EXPENDITURE")
  INCOME @map("INCOME")
}

//prisma enum string https://github.com/prisma/prisma/discussions/2732